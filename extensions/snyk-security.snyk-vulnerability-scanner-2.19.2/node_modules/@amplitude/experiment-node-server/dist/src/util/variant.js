"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.evaluationVariantsToVariants = exports.evaluationVariantToVariant = exports.filterDefaultVariants = void 0;
const filterDefaultVariants = (variants) => {
    var _a, _b;
    const results = {};
    for (const flagKey in variants) {
        const variant = variants[flagKey];
        const isDefault = (_a = variant === null || variant === void 0 ? void 0 : variant.metadata) === null || _a === void 0 ? void 0 : _a.default;
        const isDeployed = ((_b = variant === null || variant === void 0 ? void 0 : variant.metadata) === null || _b === void 0 ? void 0 : _b.deployed) || true;
        if (!isDefault && isDeployed) {
            results[flagKey] = variant;
        }
    }
    return results;
};
exports.filterDefaultVariants = filterDefaultVariants;
const evaluationVariantToVariant = (evaluationVariant) => {
    let stringValue;
    if (typeof evaluationVariant.value === 'string') {
        stringValue = evaluationVariant.value;
    }
    else if (evaluationVariant.value !== null &&
        evaluationVariant.value !== undefined) {
        stringValue = JSON.stringify(evaluationVariant.value);
    }
    return Object.assign(Object.assign({}, evaluationVariant), { value: stringValue });
};
exports.evaluationVariantToVariant = evaluationVariantToVariant;
const evaluationVariantsToVariants = (evaluationVariants) => {
    const variants = {};
    Object.keys(evaluationVariants).forEach((key) => {
        variants[key] = (0, exports.evaluationVariantToVariant)(evaluationVariants[key]);
    });
    return variants;
};
exports.evaluationVariantsToVariants = evaluationVariantsToVariants;

"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.CodeActionsProvider = void 0;
class CodeActionsProvider {
    constructor(issues, codeActionKindAdapter) {
        this.issues = issues;
        this.codeActionKindAdapter = codeActionKindAdapter;
        this.providedCodeActionKinds = [this.codeActionKindAdapter.getQuickFix()];
    }
    provideCodeActions(document, clickedRange, _context) {
        if (this.issues.size === 0) {
            return undefined;
        }
        for (const [folderPath, issues] of this.issues.entries()) {
            if (issues instanceof Error || !issues) {
                continue;
            }
            const { issue, range } = this.findIssueWithRange(issues, document, clickedRange);
            if (!issue || !range) {
                continue;
            }
            // If an issue is found, return the actions
            return this.getActions(folderPath, document, issue, range);
        }
        // If no issues were found after checking all entries, return undefined
        return undefined;
    }
    findIssueWithRange(result, document, clickedRange) {
        let range = undefined;
        const issue = result.find(issue => {
            if (issue.filePath !== document.uri.fsPath) {
                return false;
            }
            range = this.getIssueRange(issue);
            return range.contains(clickedRange);
        });
        return { issue, range };
    }
}
exports.CodeActionsProvider = CodeActionsProvider;
//# sourceMappingURL=codeActionsProvider.js.map
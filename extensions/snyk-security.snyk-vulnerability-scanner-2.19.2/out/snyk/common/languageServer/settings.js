"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.LanguageServerSettings = void 0;
const lodash_1 = __importDefault(require("lodash"));
const integration_1 = require("../../cli/contants/integration");
const configuration_1 = require("../configuration/configuration");
const languageServer_1 = require("../constants/languageServer");
class LanguageServerSettings {
    static async fromConfiguration(configuration, user) {
        const featuresConfiguration = configuration.getFeaturesConfiguration();
        const ossEnabled = lodash_1.default.isUndefined(featuresConfiguration.ossEnabled) ? true : featuresConfiguration.ossEnabled;
        const iacEnabled = lodash_1.default.isUndefined(featuresConfiguration.iacEnabled) ? true : featuresConfiguration.iacEnabled;
        const codeSecurityEnabled = lodash_1.default.isUndefined(featuresConfiguration.codeSecurityEnabled)
            ? true
            : featuresConfiguration.codeSecurityEnabled;
        const codeQualityEnabled = lodash_1.default.isUndefined(featuresConfiguration.codeQualityEnabled)
            ? true
            : featuresConfiguration.codeQualityEnabled;
        return {
            activateSnykCodeSecurity: `${codeSecurityEnabled}`,
            activateSnykCodeQuality: `${codeQualityEnabled}`,
            activateSnykOpenSource: `${ossEnabled}`,
            activateSnykIac: `${iacEnabled}`,
            enableDeltaFindings: `${configuration.getDeltaFindingsEnabled()}`,
            sendErrorReports: `${configuration.shouldReportErrors}`,
            cliPath: configuration.getCliPath(),
            endpoint: configuration.snykApiEndpoint,
            organization: configuration.organization,
            token: await configuration.getToken(),
            automaticAuthentication: 'false',
            authenticationMethod: configuration.getAuthenticationMethod(),
            additionalParams: configuration.getAdditionalCliParameters(),
            manageBinariesAutomatically: `${configuration.isAutomaticDependencyManagementEnabled()}`,
            filterSeverity: configuration.severityFilter,
            scanningMode: configuration.scanningMode,
            insecure: `${configuration.getInsecure()}`,
            enableTrustedFoldersFeature: 'true',
            trustedFolders: configuration.getTrustedFolders(),
            integrationName: integration_1.CLI_INTEGRATION_NAME,
            integrationVersion: await configuration_1.Configuration.getVersion(),
            deviceId: user.anonymousId,
            requiredProtocolVersion: `${languageServer_1.PROTOCOL_VERSION}`,
            folderConfigs: configuration.getFolderConfigs(),
            enableSnykOSSQuickFixCodeActions: `${configuration.getPreviewFeatures().ossQuickfixes}`,
        };
    }
}
exports.LanguageServerSettings = LanguageServerSettings;
//# sourceMappingURL=settings.js.map
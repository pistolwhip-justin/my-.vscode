"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.getAbsoluteMarkerFilePath = exports.ignoreIssueCommentText = void 0;
/* eslint-disable @typescript-eslint/no-array-constructor */
/* eslint-disable @typescript-eslint/no-unsafe-return */
/* eslint-disable @typescript-eslint/no-unsafe-call */
/* eslint-disable @typescript-eslint/no-unsafe-member-access */
const path_1 = __importDefault(require("path"));
const analysis_1 = require("../constants/analysis");
const ignoreIssueCommentText = (issueId, isFileIgnore) => {
    const snykComment = isFileIgnore ? analysis_1.FILE_IGNORE_ISSUE_BASE_COMMENT_TEXT : analysis_1.IGNORE_ISSUE_BASE_COMMENT_TEXT;
    return `${snykComment} ${issueId}: ${analysis_1.IGNORE_ISSUE_REASON_TIP}`;
};
exports.ignoreIssueCommentText = ignoreIssueCommentText;
const getAbsoluteMarkerFilePath = (workspace, markerFilePath, suggestionFilePath) => {
    if (!markerFilePath) {
        // If no filePath reported, use suggestion file path as marker's path. Suggestion path is always absolute.
        return suggestionFilePath;
    }
    const workspaceFolders = workspace.getWorkspaceFolders();
    if (workspaceFolders.length > 1) {
        return markerFilePath;
    }
    // The Snyk Code analysis reported marker path is relative when in workspace with a single folder, thus need to convert to an absolute
    return path_1.default.resolve(workspaceFolders[0], markerFilePath);
};
exports.getAbsoluteMarkerFilePath = getAbsoluteMarkerFilePath;
//# sourceMappingURL=analysisUtils.js.map